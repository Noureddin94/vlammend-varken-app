// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vlammend_Varken.Core.Data;

#nullable disable

namespace Vlammend_Varken.Core.Migrations
{
    [DbContext(typeof(AppDbConnection))]
    [Migration("20250629082213_AddUserApprovalFields")]
    partial class AddUserApprovalFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.MenuCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MenuCategories");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MenuCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuCategoryId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.MergedTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MainTableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MergedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MergedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MergedTableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainTableId");

                    b.HasIndex("MergedTableId");

                    b.ToTable("MergedTables");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.OrderOverview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceEach")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderOverviews");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupSize")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 5
                        },
                        new
                        {
                            Id = 6,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 6
                        },
                        new
                        {
                            Id = 7,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 7
                        },
                        new
                        {
                            Id = 8,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 8
                        },
                        new
                        {
                            Id = 9,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 9
                        },
                        new
                        {
                            Id = 10,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 10
                        },
                        new
                        {
                            Id = 11,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 11
                        },
                        new
                        {
                            Id = 12,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 12
                        },
                        new
                        {
                            Id = 13,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 13
                        },
                        new
                        {
                            Id = 14,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 14
                        },
                        new
                        {
                            Id = 15,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 15
                        },
                        new
                        {
                            Id = 16,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 16
                        },
                        new
                        {
                            Id = 17,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 17
                        },
                        new
                        {
                            Id = 18,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 18
                        },
                        new
                        {
                            Id = 19,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 19
                        },
                        new
                        {
                            Id = 20,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 20
                        },
                        new
                        {
                            Id = 21,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 21
                        },
                        new
                        {
                            Id = 22,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 22
                        },
                        new
                        {
                            Id = 23,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 23
                        },
                        new
                        {
                            Id = 24,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 24
                        },
                        new
                        {
                            Id = 25,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 25
                        },
                        new
                        {
                            Id = 26,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 26
                        },
                        new
                        {
                            Id = 27,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 27
                        },
                        new
                        {
                            Id = 28,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 28
                        },
                        new
                        {
                            Id = 29,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 29
                        },
                        new
                        {
                            Id = 30,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 30
                        },
                        new
                        {
                            Id = 31,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 31
                        },
                        new
                        {
                            Id = 32,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 32
                        },
                        new
                        {
                            Id = 33,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 33
                        },
                        new
                        {
                            Id = 34,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 34
                        },
                        new
                        {
                            Id = 35,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 35
                        },
                        new
                        {
                            Id = 36,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 36
                        },
                        new
                        {
                            Id = 37,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 37
                        },
                        new
                        {
                            Id = 38,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 38
                        },
                        new
                        {
                            Id = 39,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 39
                        },
                        new
                        {
                            Id = 40,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 40
                        },
                        new
                        {
                            Id = 41,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 41
                        },
                        new
                        {
                            Id = 42,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 42
                        },
                        new
                        {
                            Id = 43,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 43
                        },
                        new
                        {
                            Id = 44,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 44
                        },
                        new
                        {
                            Id = 45,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 45
                        },
                        new
                        {
                            Id = 46,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 46
                        },
                        new
                        {
                            Id = 47,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 47
                        },
                        new
                        {
                            Id = 48,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 48
                        },
                        new
                        {
                            Id = 49,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 49
                        },
                        new
                        {
                            Id = 50,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 50
                        },
                        new
                        {
                            Id = 51,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 51
                        },
                        new
                        {
                            Id = 52,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 52
                        },
                        new
                        {
                            Id = 53,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 53
                        },
                        new
                        {
                            Id = 54,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 54
                        },
                        new
                        {
                            Id = 55,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 55
                        },
                        new
                        {
                            Id = 56,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 56
                        },
                        new
                        {
                            Id = 57,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 57
                        },
                        new
                        {
                            Id = 58,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 58
                        },
                        new
                        {
                            Id = 59,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 59
                        },
                        new
                        {
                            Id = 60,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 60
                        },
                        new
                        {
                            Id = 61,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 61
                        },
                        new
                        {
                            Id = 62,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 62
                        },
                        new
                        {
                            Id = 63,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 63
                        },
                        new
                        {
                            Id = 64,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 64
                        },
                        new
                        {
                            Id = 65,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 65
                        },
                        new
                        {
                            Id = 66,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 66
                        },
                        new
                        {
                            Id = 67,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 67
                        },
                        new
                        {
                            Id = 68,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 68
                        },
                        new
                        {
                            Id = 69,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 69
                        },
                        new
                        {
                            Id = 70,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 70
                        },
                        new
                        {
                            Id = 71,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 71
                        },
                        new
                        {
                            Id = 72,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 72
                        },
                        new
                        {
                            Id = 73,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 73
                        },
                        new
                        {
                            Id = 74,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 74
                        },
                        new
                        {
                            Id = 75,
                            GroupSize = 2,
                            Status = 0,
                            TableNumber = 75
                        });
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Vlammend_Varken.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Vlammend_Varken.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vlammend_Varken.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Vlammend_Varken.Core.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.Ingredient", b =>
                {
                    b.HasOne("Vlammend_Varken.Core.Models.MenuItem", "MenuItem")
                        .WithMany("ingredients")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.MenuItem", b =>
                {
                    b.HasOne("Vlammend_Varken.Core.Models.MenuCategory", "MenuCategory")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuCategory");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.MergedTable", b =>
                {
                    b.HasOne("Vlammend_Varken.Core.Models.Table", "MainTable")
                        .WithMany()
                        .HasForeignKey("MainTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Vlammend_Varken.Core.Models.Table", "MergedTableReference")
                        .WithMany()
                        .HasForeignKey("MergedTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MainTable");

                    b.Navigation("MergedTableReference");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.Order", b =>
                {
                    b.HasOne("Vlammend_Varken.Core.Models.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.OrderOverview", b =>
                {
                    b.HasOne("Vlammend_Varken.Core.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vlammend_Varken.Core.Models.Order", "Order")
                        .WithMany("OrderOverviews")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.MenuCategory", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.MenuItem", b =>
                {
                    b.Navigation("ingredients");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.Order", b =>
                {
                    b.Navigation("OrderOverviews");
                });

            modelBuilder.Entity("Vlammend_Varken.Core.Models.Table", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
